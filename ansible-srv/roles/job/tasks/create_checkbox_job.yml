---
- name: updating apt pm's repository caches
  apt:
    update_cache: yes

- name: Upgrade installed packages
  apt:
    upgrade: dist

- name: Install latest package 
  apt:
    name: ['python3-pip','python-pip', 'git', python3-requests]
    state: latest
    update_cache: yes
    force: yes

- name: Install Jenkins Job Builder
  pip: name=jenkins-job-builder 


- name: enabling access to mvn without password 
  lineinfile:
    path: /etc/sudoers
    line: "jenkins ALL=(ALL) NOPASSWD: ALL"

- name: Create directory for jenkins.ini
  file:
    path: /etc/jenkins_jobs
    state: directory

- name: read admin pwd
  command: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: adminpwd

- name: Copy jenkins_jobs.ini file
  template:
    src: templates/jenkins_jobs.ini.j2
    dest: jenkins_jobs.ini

- name: ansible jobs directory 
  file:
    path: jobs
    state: directory
  
- name: Copy checkbox_job.yml file
  copy:
    src: files/checkbox_job.yml
    dest: jobs/checkbox_job.yml

- name: Getting Jenkins CLI Jar
  get_url:
    url: "http://localhost:{{jenkins_port}}/jnlpJars/jenkins-cli.jar"
    dest: "."
    mode: 0755

- name: Security setup for configuration
  jenkins_script:
    script: |
        import jenkins.model.*
        import hudson.security.*
        import hudson.security.csrf.DefaultCrumbIssuer
        def instance = Jenkins.getInstance()
        instance.disableSecurity()
        instance.save()
    user: admin
    url: "http://localhost:{{jenkins_port}}"
    password: "{{ adminpwd.stdout }}"

- name: Run shell to update jobs
  command: 'jenkins-jobs --conf jenkins_jobs.ini update jobs'

- name: Increase security
  jenkins_script:
   script: |
    import jenkins.model.*
    import hudson.security.*
    def instance = Jenkins.getInstance()
    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    instance.setSecurityRealm(hudsonRealm)
    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    strategy.setAllowAnonymousRead(false)
    instance.setAuthorizationStrategy(strategy)
    instance.save()
   user: admin
   url: "http://localhost:{{jenkins_port}}"
   password: "{{adminpwd.stdout}}"

# - name: Restart Jenkins
#   systemd:
#     state: restarted
#     daemon_reload: yes
#     name: jenkins

# - name: Ensure Jenkins is up and running
#   uri:
#      url: "http://localhost:{{jenkins_port}}/"
#      user: admin
#      password: "{{ adminpwd.stdout }}"
#      force_basic_auth: yes
#      status_code: 200
#      timeout: 5
#   register: jenkins_service_status
#   retries: 6
#   delay: 5
#   until: >
#     'status' in jenkins_service_status and
#     jenkins_service_status['status'] == 200