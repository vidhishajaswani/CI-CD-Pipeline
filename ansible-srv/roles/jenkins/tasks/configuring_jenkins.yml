---
  - name: sleep 5s
    shell: 'sleep 5s'

  - name: read admin pwd
    command: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: adminpwd

  - name: unlock and add admin user
    jenkins_script:
     script: |
      import jenkins.model.*
      import hudson.security.*
      def instance = Jenkins.getInstance()
      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      hudsonRealm.createAccount('${user_name}', '${user_pwd}')
      instance.setSecurityRealm(hudsonRealm)
      def strategy = new AuthorizationStrategy.Unsecured()
      instance.setAuthorizationStrategy(strategy)
      instance.save()
     args:
      user_name: "{{ admin_user_name }}"
      user_pwd: "{{ admin_user_pass }}"
     user: admin
     url: "http://localhost:{{jenkins_port}}"
     password: "{{ adminpwd.stdout }}"

  - name: complete setup wizard
    jenkins_script:
     script: |
      import static jenkins.model.Jenkins.instance as jenkins
      import jenkins.install.InstallState
      if (!jenkins.installState.isSetupComplete()) {
        InstallState.INITIAL_SETUP_COMPLETED.initializeState()
      }
     user: admin
     url: "http://localhost:{{jenkins_port}}"
     password: "{{ adminpwd.stdout }}"

  - name: install plugin
    jenkins_plugin:
     name: "{{ item }}"
     state: latest
     url_username: admin
     url_password: "{{ adminpwd.stdout }}"
     url: "http://localhost:{{jenkins_port}}"
     with_dependencies: yes
     validate_certs: no
    with_items:
      - conditional-buildstep
      - apache-httpcomponents-client-4-api
      - jsch
      - display-url-api
      - junit
      - script-security
      - parameterized-trigger
      - jquery
      - git-client
      - scm-api
      - credentials
      - workflow-scm-step
      - matrix-project
      - structs
      - workflow-api
      - workflow-step-api
      - mailer
      - ssh-credentials
      - plain-credentials 
      - build-pipeline-plugin
      - ansible
      - git
      - maven-plugin
      - javadoc
      - token-macro
      - run-condition

  - name: Change the Jenkins port
    template:
      src: templates/jenkins.j2
      dest: /etc/default/jenkins

  - name: restart service jenkins
    systemd:
      state: restarted
      daemon_reload: yes
      name: jenkins
